/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import { useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import {GroupProps} from "@react-three/fiber";


type GLTFResult = GLTF & {
    nodes: {
        Cube004: THREE.SkinnedMesh
        Cube004_1: THREE.SkinnedMesh
        Bone: THREE.Bone
    }
    materials: {
        Skin: THREE.MeshStandardMaterial
        Face: THREE.MeshStandardMaterial
    }
}

type ActionName =
    | 'Death'
    | 'Defeat'
    | 'Idle'
    | 'Jump'
    | 'PickUp'
    | 'Punch'
    | 'RecieveHit'
    | 'Roll'
    | 'Run'
    | 'Run_Carry'
    | 'Shoot_OneHanded'
    | 'SitDown'
    | 'StandUp'
    | 'SwordSlash'
    | 'Walk'
    | 'Walk_Carry'
type GLTFActions = Record<ActionName, THREE.AnimationAction>

interface CharacterProps extends GroupProps{}

export const Character = (props: CharacterProps) => {
    const group = useRef<THREE.Group>(null)
    const { nodes, materials, animations } = useGLTF('/models/BaseCharacter.gltf') as GLTFResult
    const { actions} = useAnimations<GLTFActions>(animations, group)
    console.log(nodes, materials, actions)
    return (
        <group ref={group} {...props} dispose={null}>
            <group name="Scene">
                <group name="CharacterArmature">
                    <group name="Body">
                        <skinnedMesh
                            name="Cube004"
                            geometry={nodes.Cube004.geometry}
                            material={materials.Skin}
                            skeleton={nodes.Cube004.skeleton}
                        />
                        <skinnedMesh
                            name="Cube004_1"
                            geometry={nodes.Cube004_1.geometry}
                            material={materials.Face}
                            skeleton={nodes.Cube004_1.skeleton}
                        />
                    </group>
                    <primitive object={nodes.Bone} />
                </group>
            </group>
        </group>
    )
}

useGLTF.preload('/models/BaseCharacter.gltf')
